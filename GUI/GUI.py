#!/usr/bin/env python
# -*- coding: iso-8859-1 -*-
# generated by wxGlade 0.5 on Sun May 20 07:26:31 2007 from C:\Documents and Settings\Kasia dom\Pulpit\sem IV\Projekt programistyczny\wxGlade\Proby\Interface\Interface_1.wxg

import wx
import os

ID_OPEN = 11
ID_SAVE = 12
ID_EXIT = 13

ID_DICT = 21
ID_DATA = 22

ID_RECOG = 31

ID_DOCUM = 41
ID_DEMANDS = 42
ID_ABOUT = 43


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.Snakereader_menubar = wx.MenuBar()
        self.SetMenuBar(self.Snakereader_menubar)
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(11, "Open", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(12, "Save", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(13, "Exit", "", wx.ITEM_NORMAL)
        self.Snakereader_menubar.Append(wxglade_tmp_menu, "File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(21, "Dictionaries", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(22, "Technical data", "", wx.ITEM_NORMAL)
        self.Snakereader_menubar.Append(wxglade_tmp_menu, "Options")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(31, "Recognize", "", wx.ITEM_NORMAL)
        self.Snakereader_menubar.Append(wxglade_tmp_menu, "Recognize")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(41, "Documention", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(42, "Requirements", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(43, "About Snakereader", "", wx.ITEM_NORMAL)
        self.Snakereader_menubar.Append(wxglade_tmp_menu, "Help")
        # Menu Bar end
        
        # Tool Bar
        self.Snakereader_toolbar = wx.ToolBar(self, -1)
        self.SetToolBar(self.Snakereader_toolbar)
        self.Snakereader_toolbar.AddLabelTool(51, "Open", wx.Bitmap("Open.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Open", "")
        self.Snakereader_toolbar.AddLabelTool(52, "Recognize", wx.Bitmap("Recognize.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Recognize", "")
        self.Snakereader_toolbar.AddLabelTool(53, "Save", wx.Bitmap("Save.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Save", "")
        self.Snakereader_toolbar.AddSeparator()
        self.Snakereader_toolbar.AddLabelTool(54, "Options", wx.Bitmap("Options.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Options", "")
        # Tool Bar end

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.a, id=11)
        # end wxGlade


### moj kod

        

        wx.EVT_MENU(self, ID_OPEN, self.OnOpen)
        #wx.EVT_MENU(self, ID_SAVE, self.OnSave)
        wx.EVT_MENU(self, ID_EXIT, self.OnExit)
                    
        #wx.EVT_MENU(self, ID_DICT, self.OnDict)
        #wx.EVT_MENU(self, ID_DATA, self.OnData)

        #wx.EVT_MENU(self, ID_RECOG, self.OnRecog)
        
        #wx.EVT_MENU(self, ID_DOCUM, self.OnDocum)
        wx.EVT_MENU(self, ID_DEMANDS, self.OnDemands)
        wx.EVT_MENU(self, ID_ABOUT, self.OnAbout)
        #(inna wersja exit, niewazne)       self.Bind(wx.EVT_MENU, self.CloseWindow, id=ID_EXIT)

    def OnOpen(self,e):
        """ Open a file"""
        print "open"
        self.dirname = ''
        dialog = wx.FileDialog(self, "Choose a file", self.dirname, "", "*.*", wx.OPEN)
        if dialog.ShowModal() == wx.ID_OK:
            print "open 2"
            self.filename=dialog.GetFilename()
            self.dirname=dialog.GetDirectory()
            f=open(os.path.join(self.dirname,self.filename),'r')
            f.open()
# !!!            #self.control.SetValue(f.read())
            f.close()
        dialog.Destroy()

    #def OnSave(self,e):

    def OnExit(self,e):
        self.Close(True)
        #(druga wersja exit, niewazne):    
        #def CloseWindow(self,event):
        #    self.Close()

    #def OnDict(self,e):
    #def OnData(self,e):
    #def OnRecog(self,e):
    #def OnDocum(self,e):
    
    def OnDemands(self,e):
        dialog = wx.MessageDialog(self, "DANE WEJSCIOWE:\n"
                                  "dokument w postaci zeskanowanego obrazu \n"
                                  "lub zdjecia cyfrowego (format bmp lub jpg):\n"
                                  "\t jezyk polski,\n"
                                  "\t pismo drukowane,\n"
                                  "\t zarowno tekst jak i tlo jednokolorowe i jednotonowe,\n"
                                  "\t duzy kontrast pomiedzy kolorem tekstu i tla,\n"
                                  "\t rozdzielczosc 300dpi,\n"
                                  "\t uklad jednorodny (brak pol tekstowych, rysunkow, tabel, kolumn, itp.).\n\n"
                                  "DANE WYJSCIOWE:\n"
                                  "dokument przetworzony na postac elektroniczna\n"
                                  "i zapisany w formacie txt","Wymagania", wx.OK)
        dialog.ShowModal()
        dialog.Destroy()

        
    def OnAbout(self,e):
        dialog = wx.MessageDialog(self, " Snakereader jest projektem Open Source \n"
                                  "stworzonym przez studentow Politechniki Wroclawskiej \n\n"
                                  "Wroclaw, 2007","O programie", wx.OK)
        dialog.ShowModal()
        dialog.Destroy()
        #self.components.ID_RECOG.enabled = False
                             
    
        
### end of moj kod

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Snakereader")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("Snake.bmp", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetSize((435, 360))
        self.Snakereader_toolbar.SetToolBitmapSize((30, 30))
        self.Snakereader_toolbar.Realize()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def a(self, event): # wxGlade: MyFrame.<event_handler>
        print "Event handler `a' not implemented!"
        event.Skip()

# end of class MyFrame


class MyDialog1(wx.Dialog):
    def __init__(self, *args, **kwds):
        # content of this block not found: did you rename this class?
        pass

    def __set_properties(self):
        # content of this block not found: did you rename this class?
        pass

    def __do_layout(self):
        # content of this block not found: did you rename this class?
        pass

# end of class MyDialog1


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    Snakereader = MyFrame(None, -1, "")
    app.SetTopWindow(Snakereader)
    Snakereader.Show()
    app.MainLoop()
